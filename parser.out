Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABRIRLLAVES
    CERRARLLAVES
    PUNTOYCOMA

Grammar

Rule 0     S' -> assignVariable
Rule 1     assignVariable -> VARIABLE IGUAL expr
Rule 2     assignVariable -> VARIABLE IGUAL STRING
Rule 3     assignVariable -> VARIABLE IGUAL lambda
Rule 4     assignVariable -> VARIABLE IGUAL filter
Rule 5     assignVariable -> VARIABLE IGUAL lista
Rule 6     assignVariable -> VARIABLE IGUAL reduce
Rule 7     assignVariable -> VARIABLE IGUAL map
Rule 8     lista -> ABRIRCORCHETE lisString CERRARCORCHETE
Rule 9     lista -> ABRIRCORCHETE lisInt CERRARCORCHETE
Rule 10    lisString -> lisString COMA STRING
Rule 11    lisString -> STRING
Rule 12    lisInt -> lisInt COMA NUMERO
Rule 13    lisInt -> NUMERO
Rule 14    condicion -> IGUAL IGUAL
Rule 15    condicion -> EXCLAMACION IGUAL
Rule 16    condicion -> MAYORQUE IGUAL
Rule 17    condicion -> MENORQUE IGUAL
Rule 18    condicion -> MAYORQUE
Rule 19    condicion -> MENORQUE
Rule 20    evaluarCondicion -> expr condicion expr
Rule 21    evaluarCondicion -> BOOLEANO
Rule 22    evaluarCondicion -> expr IGUAL IGUAL STRING
Rule 23    evaluarCondicion -> expr IGUAL IGUAL BOOLEANO
Rule 24    evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO
Rule 25    evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion
Rule 26    expr -> expr MAS term
Rule 27    expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
Rule 28    expr -> expr MENOS term
Rule 29    expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
Rule 30    expr -> term
Rule 31    term -> term POR term
Rule 32    term -> term DIVIDIR term
Rule 33    term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
Rule 34    term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
Rule 35    term -> NUMERO
Rule 36    term -> VARIABLE
Rule 37    term -> FLOAT
Rule 38    term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS
Rule 39    term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS
Rule 40    parametros -> parametros COMA VARIABLE
Rule 41    parametros -> VARIABLE
Rule 42    parametros -> parametros COMA assignVariable
Rule 43    parametros -> assignVariable
Rule 44    parametros -> <empty>
Rule 45    cualquierCosa -> STRING
Rule 46    cualquierCosa -> NUMERO
Rule 47    cualquierCosa -> VARIABLE
Rule 48    filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
Rule 49    filter -> FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS
Rule 50    reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
Rule 51    reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS
Rule 52    map -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
Rule 53    map -> MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS
Rule 54    lambda -> LAMBDA parametros DOSPUNTOS expr
Rule 55    lambda -> LAMBDA parametros DOSPUNTOS evaluarCondicion
Rule 56    lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa
Rule 57    lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa

Terminals, with rules where they appear

ABRIRCORCHETE        : 8 9
ABRIRLLAVES          : 
ABRIRPARENTESIS      : 27 29 33 34 38 39 48 49 50 51 52 53
BOOLEANO             : 21 23 24
CERRARCORCHETE       : 8 9
CERRARLLAVES         : 
CERRARPARENTESIS     : 27 29 33 34 38 39 48 49 50 51 52 53
COMA                 : 10 12 40 42 48 49 50 51 52 53
DIVIDIR              : 32 34 39
DOSPUNTOS            : 54 55 56 57
ELSE                 : 56 57
EXCLAMACION          : 15 24
FILTER               : 48 49
FLOAT                : 37
IF                   : 56 57
IGUAL                : 1 2 3 4 5 6 7 14 14 15 16 17 22 22 23 23 24
INT                  : 56
LAMBDA               : 54 55 56 57
MAPA                 : 52 53
MAS                  : 26 27
MAYORQUE             : 16 18
MENORQUE             : 17 19
MENOS                : 28 29
NUMERO               : 12 13 33 34 35 46
OPERADORLOGICO       : 25
POR                  : 31 33 38
PUNTOYCOMA           : 
REDUCE               : 50 51
STR                  : 57
STRING               : 2 10 11 22 45
VARIABLE             : 1 2 3 4 5 6 7 36 40 41 47 48 50 52
error                : 

Nonterminals, with rules where they appear

assignVariable       : 42 43 0
condicion            : 20
cualquierCosa        : 56 57
evaluarCondicion     : 25 25 55 56 57
expr                 : 1 20 20 22 23 24 26 27 28 29 54
filter               : 4
lambda               : 3 48 49 50 51 52 53
lisInt               : 9 12
lisString            : 8 10
lista                : 5 49 51 53
map                  : 7
parametros           : 40 42 54 55 56 57
reduce               : 6
term                 : 26 27 28 29 30 31 31 32 32 33 34 38 38 39 39

Parsing method: LALR

state 0

    (0) S' -> . assignVariable
    (1) assignVariable -> . VARIABLE IGUAL expr
    (2) assignVariable -> . VARIABLE IGUAL STRING
    (3) assignVariable -> . VARIABLE IGUAL lambda
    (4) assignVariable -> . VARIABLE IGUAL filter
    (5) assignVariable -> . VARIABLE IGUAL lista
    (6) assignVariable -> . VARIABLE IGUAL reduce
    (7) assignVariable -> . VARIABLE IGUAL map

    VARIABLE        shift and go to state 2

    assignVariable                 shift and go to state 1

state 1

    (0) S' -> assignVariable .



state 2

    (1) assignVariable -> VARIABLE . IGUAL expr
    (2) assignVariable -> VARIABLE . IGUAL STRING
    (3) assignVariable -> VARIABLE . IGUAL lambda
    (4) assignVariable -> VARIABLE . IGUAL filter
    (5) assignVariable -> VARIABLE . IGUAL lista
    (6) assignVariable -> VARIABLE . IGUAL reduce
    (7) assignVariable -> VARIABLE . IGUAL map

    IGUAL           shift and go to state 3


state 3

    (1) assignVariable -> VARIABLE IGUAL . expr
    (2) assignVariable -> VARIABLE IGUAL . STRING
    (3) assignVariable -> VARIABLE IGUAL . lambda
    (4) assignVariable -> VARIABLE IGUAL . filter
    (5) assignVariable -> VARIABLE IGUAL . lista
    (6) assignVariable -> VARIABLE IGUAL . reduce
    (7) assignVariable -> VARIABLE IGUAL . map
    (26) expr -> . expr MAS term
    (27) expr -> . ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
    (28) expr -> . expr MENOS term
    (29) expr -> . ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
    (30) expr -> . term
    (54) lambda -> . LAMBDA parametros DOSPUNTOS expr
    (55) lambda -> . LAMBDA parametros DOSPUNTOS evaluarCondicion
    (56) lambda -> . LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa
    (57) lambda -> . LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa
    (48) filter -> . FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
    (49) filter -> . FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS
    (8) lista -> . ABRIRCORCHETE lisString CERRARCORCHETE
    (9) lista -> . ABRIRCORCHETE lisInt CERRARCORCHETE
    (50) reduce -> . REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
    (51) reduce -> . REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS
    (52) map -> . MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
    (53) map -> . MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    STRING          shift and go to state 6
    ABRIRPARENTESIS shift and go to state 13
    LAMBDA          shift and go to state 14
    FILTER          shift and go to state 15
    ABRIRCORCHETE   shift and go to state 16
    REDUCE          shift and go to state 17
    MAPA            shift and go to state 18
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    expr                           shift and go to state 5
    lambda                         shift and go to state 7
    filter                         shift and go to state 8
    lista                          shift and go to state 9
    reduce                         shift and go to state 10
    map                            shift and go to state 11
    term                           shift and go to state 12

state 4

    (36) term -> VARIABLE .

    POR             reduce using rule 36 (term -> VARIABLE .)
    DIVIDIR         reduce using rule 36 (term -> VARIABLE .)
    MAS             reduce using rule 36 (term -> VARIABLE .)
    MENOS           reduce using rule 36 (term -> VARIABLE .)
    $end            reduce using rule 36 (term -> VARIABLE .)
    DOSPUNTOS       reduce using rule 36 (term -> VARIABLE .)
    COMA            reduce using rule 36 (term -> VARIABLE .)
    IGUAL           reduce using rule 36 (term -> VARIABLE .)
    EXCLAMACION     reduce using rule 36 (term -> VARIABLE .)
    MAYORQUE        reduce using rule 36 (term -> VARIABLE .)
    MENORQUE        reduce using rule 36 (term -> VARIABLE .)
    OPERADORLOGICO  reduce using rule 36 (term -> VARIABLE .)
    ELSE            reduce using rule 36 (term -> VARIABLE .)
    CERRARPARENTESIS reduce using rule 36 (term -> VARIABLE .)


state 5

    (1) assignVariable -> VARIABLE IGUAL expr .
    (26) expr -> expr . MAS term
    (28) expr -> expr . MENOS term

    $end            reduce using rule 1 (assignVariable -> VARIABLE IGUAL expr .)
    DOSPUNTOS       reduce using rule 1 (assignVariable -> VARIABLE IGUAL expr .)
    COMA            reduce using rule 1 (assignVariable -> VARIABLE IGUAL expr .)
    MAS             shift and go to state 21
    MENOS           shift and go to state 22


state 6

    (2) assignVariable -> VARIABLE IGUAL STRING .

    $end            reduce using rule 2 (assignVariable -> VARIABLE IGUAL STRING .)
    DOSPUNTOS       reduce using rule 2 (assignVariable -> VARIABLE IGUAL STRING .)
    COMA            reduce using rule 2 (assignVariable -> VARIABLE IGUAL STRING .)


state 7

    (3) assignVariable -> VARIABLE IGUAL lambda .

    $end            reduce using rule 3 (assignVariable -> VARIABLE IGUAL lambda .)
    DOSPUNTOS       reduce using rule 3 (assignVariable -> VARIABLE IGUAL lambda .)
    COMA            reduce using rule 3 (assignVariable -> VARIABLE IGUAL lambda .)


state 8

    (4) assignVariable -> VARIABLE IGUAL filter .

    $end            reduce using rule 4 (assignVariable -> VARIABLE IGUAL filter .)
    DOSPUNTOS       reduce using rule 4 (assignVariable -> VARIABLE IGUAL filter .)
    COMA            reduce using rule 4 (assignVariable -> VARIABLE IGUAL filter .)


state 9

    (5) assignVariable -> VARIABLE IGUAL lista .

    $end            reduce using rule 5 (assignVariable -> VARIABLE IGUAL lista .)
    DOSPUNTOS       reduce using rule 5 (assignVariable -> VARIABLE IGUAL lista .)
    COMA            reduce using rule 5 (assignVariable -> VARIABLE IGUAL lista .)


state 10

    (6) assignVariable -> VARIABLE IGUAL reduce .

    $end            reduce using rule 6 (assignVariable -> VARIABLE IGUAL reduce .)
    DOSPUNTOS       reduce using rule 6 (assignVariable -> VARIABLE IGUAL reduce .)
    COMA            reduce using rule 6 (assignVariable -> VARIABLE IGUAL reduce .)


state 11

    (7) assignVariable -> VARIABLE IGUAL map .

    $end            reduce using rule 7 (assignVariable -> VARIABLE IGUAL map .)
    DOSPUNTOS       reduce using rule 7 (assignVariable -> VARIABLE IGUAL map .)
    COMA            reduce using rule 7 (assignVariable -> VARIABLE IGUAL map .)


state 12

    (30) expr -> term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

    MAS             reduce using rule 30 (expr -> term .)
    MENOS           reduce using rule 30 (expr -> term .)
    $end            reduce using rule 30 (expr -> term .)
    DOSPUNTOS       reduce using rule 30 (expr -> term .)
    COMA            reduce using rule 30 (expr -> term .)
    IGUAL           reduce using rule 30 (expr -> term .)
    EXCLAMACION     reduce using rule 30 (expr -> term .)
    MAYORQUE        reduce using rule 30 (expr -> term .)
    MENORQUE        reduce using rule 30 (expr -> term .)
    OPERADORLOGICO  reduce using rule 30 (expr -> term .)
    ELSE            reduce using rule 30 (expr -> term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24


state 13

    (27) expr -> ABRIRPARENTESIS . expr MAS term CERRARPARENTESIS
    (29) expr -> ABRIRPARENTESIS . expr MENOS term CERRARPARENTESIS
    (33) term -> ABRIRPARENTESIS . term POR NUMERO CERRARPARENTESIS
    (34) term -> ABRIRPARENTESIS . term DIVIDIR NUMERO CERRARPARENTESIS
    (38) term -> ABRIRPARENTESIS . term POR term CERRARPARENTESIS
    (39) term -> ABRIRPARENTESIS . term DIVIDIR term CERRARPARENTESIS
    (26) expr -> . expr MAS term
    (27) expr -> . ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
    (28) expr -> . expr MENOS term
    (29) expr -> . ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
    (30) expr -> . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 13
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    expr                           shift and go to state 25
    term                           shift and go to state 26

state 14

    (54) lambda -> LAMBDA . parametros DOSPUNTOS expr
    (55) lambda -> LAMBDA . parametros DOSPUNTOS evaluarCondicion
    (56) lambda -> LAMBDA . parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa
    (57) lambda -> LAMBDA . parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa
    (40) parametros -> . parametros COMA VARIABLE
    (41) parametros -> . VARIABLE
    (42) parametros -> . parametros COMA assignVariable
    (43) parametros -> . assignVariable
    (44) parametros -> .
    (1) assignVariable -> . VARIABLE IGUAL expr
    (2) assignVariable -> . VARIABLE IGUAL STRING
    (3) assignVariable -> . VARIABLE IGUAL lambda
    (4) assignVariable -> . VARIABLE IGUAL filter
    (5) assignVariable -> . VARIABLE IGUAL lista
    (6) assignVariable -> . VARIABLE IGUAL reduce
    (7) assignVariable -> . VARIABLE IGUAL map

    VARIABLE        shift and go to state 28
    DOSPUNTOS       reduce using rule 44 (parametros -> .)
    COMA            reduce using rule 44 (parametros -> .)

    parametros                     shift and go to state 27
    assignVariable                 shift and go to state 29

state 15

    (48) filter -> FILTER . ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
    (49) filter -> FILTER . ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 30


state 16

    (8) lista -> ABRIRCORCHETE . lisString CERRARCORCHETE
    (9) lista -> ABRIRCORCHETE . lisInt CERRARCORCHETE
    (10) lisString -> . lisString COMA STRING
    (11) lisString -> . STRING
    (12) lisInt -> . lisInt COMA NUMERO
    (13) lisInt -> . NUMERO

    STRING          shift and go to state 33
    NUMERO          shift and go to state 34

    lisString                      shift and go to state 31
    lisInt                         shift and go to state 32

state 17

    (50) reduce -> REDUCE . ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
    (51) reduce -> REDUCE . ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 35


state 18

    (52) map -> MAPA . ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS
    (53) map -> MAPA . ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 36


state 19

    (35) term -> NUMERO .

    POR             reduce using rule 35 (term -> NUMERO .)
    DIVIDIR         reduce using rule 35 (term -> NUMERO .)
    MAS             reduce using rule 35 (term -> NUMERO .)
    MENOS           reduce using rule 35 (term -> NUMERO .)
    $end            reduce using rule 35 (term -> NUMERO .)
    DOSPUNTOS       reduce using rule 35 (term -> NUMERO .)
    COMA            reduce using rule 35 (term -> NUMERO .)
    IGUAL           reduce using rule 35 (term -> NUMERO .)
    EXCLAMACION     reduce using rule 35 (term -> NUMERO .)
    MAYORQUE        reduce using rule 35 (term -> NUMERO .)
    MENORQUE        reduce using rule 35 (term -> NUMERO .)
    OPERADORLOGICO  reduce using rule 35 (term -> NUMERO .)
    ELSE            reduce using rule 35 (term -> NUMERO .)
    CERRARPARENTESIS reduce using rule 35 (term -> NUMERO .)


state 20

    (37) term -> FLOAT .

    POR             reduce using rule 37 (term -> FLOAT .)
    DIVIDIR         reduce using rule 37 (term -> FLOAT .)
    MAS             reduce using rule 37 (term -> FLOAT .)
    MENOS           reduce using rule 37 (term -> FLOAT .)
    $end            reduce using rule 37 (term -> FLOAT .)
    DOSPUNTOS       reduce using rule 37 (term -> FLOAT .)
    COMA            reduce using rule 37 (term -> FLOAT .)
    IGUAL           reduce using rule 37 (term -> FLOAT .)
    EXCLAMACION     reduce using rule 37 (term -> FLOAT .)
    MAYORQUE        reduce using rule 37 (term -> FLOAT .)
    MENORQUE        reduce using rule 37 (term -> FLOAT .)
    OPERADORLOGICO  reduce using rule 37 (term -> FLOAT .)
    ELSE            reduce using rule 37 (term -> FLOAT .)
    CERRARPARENTESIS reduce using rule 37 (term -> FLOAT .)


state 21

    (26) expr -> expr MAS . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 38
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 37

state 22

    (28) expr -> expr MENOS . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 38
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 39

state 23

    (31) term -> term POR . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 38
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 40

state 24

    (32) term -> term DIVIDIR . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 38
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 41

state 25

    (27) expr -> ABRIRPARENTESIS expr . MAS term CERRARPARENTESIS
    (29) expr -> ABRIRPARENTESIS expr . MENOS term CERRARPARENTESIS
    (26) expr -> expr . MAS term
    (28) expr -> expr . MENOS term

    MAS             shift and go to state 42
    MENOS           shift and go to state 43


state 26

    (33) term -> ABRIRPARENTESIS term . POR NUMERO CERRARPARENTESIS
    (34) term -> ABRIRPARENTESIS term . DIVIDIR NUMERO CERRARPARENTESIS
    (38) term -> ABRIRPARENTESIS term . POR term CERRARPARENTESIS
    (39) term -> ABRIRPARENTESIS term . DIVIDIR term CERRARPARENTESIS
    (30) expr -> term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

    POR             shift and go to state 44
    DIVIDIR         shift and go to state 45
    MAS             reduce using rule 30 (expr -> term .)
    MENOS           reduce using rule 30 (expr -> term .)


state 27

    (54) lambda -> LAMBDA parametros . DOSPUNTOS expr
    (55) lambda -> LAMBDA parametros . DOSPUNTOS evaluarCondicion
    (56) lambda -> LAMBDA parametros . DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa
    (57) lambda -> LAMBDA parametros . DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa
    (40) parametros -> parametros . COMA VARIABLE
    (42) parametros -> parametros . COMA assignVariable

    DOSPUNTOS       shift and go to state 46
    COMA            shift and go to state 47


state 28

    (41) parametros -> VARIABLE .
    (1) assignVariable -> VARIABLE . IGUAL expr
    (2) assignVariable -> VARIABLE . IGUAL STRING
    (3) assignVariable -> VARIABLE . IGUAL lambda
    (4) assignVariable -> VARIABLE . IGUAL filter
    (5) assignVariable -> VARIABLE . IGUAL lista
    (6) assignVariable -> VARIABLE . IGUAL reduce
    (7) assignVariable -> VARIABLE . IGUAL map

    DOSPUNTOS       reduce using rule 41 (parametros -> VARIABLE .)
    COMA            reduce using rule 41 (parametros -> VARIABLE .)
    IGUAL           shift and go to state 3


state 29

    (43) parametros -> assignVariable .

    DOSPUNTOS       reduce using rule 43 (parametros -> assignVariable .)
    COMA            reduce using rule 43 (parametros -> assignVariable .)


state 30

    (48) filter -> FILTER ABRIRPARENTESIS . lambda COMA VARIABLE CERRARPARENTESIS
    (49) filter -> FILTER ABRIRPARENTESIS . lambda COMA lista CERRARPARENTESIS
    (54) lambda -> . LAMBDA parametros DOSPUNTOS expr
    (55) lambda -> . LAMBDA parametros DOSPUNTOS evaluarCondicion
    (56) lambda -> . LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa
    (57) lambda -> . LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa

    LAMBDA          shift and go to state 14

    lambda                         shift and go to state 48

state 31

    (8) lista -> ABRIRCORCHETE lisString . CERRARCORCHETE
    (10) lisString -> lisString . COMA STRING

    CERRARCORCHETE  shift and go to state 49
    COMA            shift and go to state 50


state 32

    (9) lista -> ABRIRCORCHETE lisInt . CERRARCORCHETE
    (12) lisInt -> lisInt . COMA NUMERO

    CERRARCORCHETE  shift and go to state 51
    COMA            shift and go to state 52


state 33

    (11) lisString -> STRING .

    CERRARCORCHETE  reduce using rule 11 (lisString -> STRING .)
    COMA            reduce using rule 11 (lisString -> STRING .)


state 34

    (13) lisInt -> NUMERO .

    CERRARCORCHETE  reduce using rule 13 (lisInt -> NUMERO .)
    COMA            reduce using rule 13 (lisInt -> NUMERO .)


state 35

    (50) reduce -> REDUCE ABRIRPARENTESIS . lambda COMA VARIABLE CERRARPARENTESIS
    (51) reduce -> REDUCE ABRIRPARENTESIS . lambda COMA lista CERRARPARENTESIS
    (54) lambda -> . LAMBDA parametros DOSPUNTOS expr
    (55) lambda -> . LAMBDA parametros DOSPUNTOS evaluarCondicion
    (56) lambda -> . LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa
    (57) lambda -> . LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa

    LAMBDA          shift and go to state 14

    lambda                         shift and go to state 53

state 36

    (52) map -> MAPA ABRIRPARENTESIS . lambda COMA VARIABLE CERRARPARENTESIS
    (53) map -> MAPA ABRIRPARENTESIS . lambda COMA lista CERRARPARENTESIS
    (54) lambda -> . LAMBDA parametros DOSPUNTOS expr
    (55) lambda -> . LAMBDA parametros DOSPUNTOS evaluarCondicion
    (56) lambda -> . LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa
    (57) lambda -> . LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa

    LAMBDA          shift and go to state 14

    lambda                         shift and go to state 54

state 37

    (26) expr -> expr MAS term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

    MAS             reduce using rule 26 (expr -> expr MAS term .)
    MENOS           reduce using rule 26 (expr -> expr MAS term .)
    $end            reduce using rule 26 (expr -> expr MAS term .)
    DOSPUNTOS       reduce using rule 26 (expr -> expr MAS term .)
    COMA            reduce using rule 26 (expr -> expr MAS term .)
    IGUAL           reduce using rule 26 (expr -> expr MAS term .)
    EXCLAMACION     reduce using rule 26 (expr -> expr MAS term .)
    MAYORQUE        reduce using rule 26 (expr -> expr MAS term .)
    MENORQUE        reduce using rule 26 (expr -> expr MAS term .)
    OPERADORLOGICO  reduce using rule 26 (expr -> expr MAS term .)
    ELSE            reduce using rule 26 (expr -> expr MAS term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24


state 38

    (33) term -> ABRIRPARENTESIS . term POR NUMERO CERRARPARENTESIS
    (34) term -> ABRIRPARENTESIS . term DIVIDIR NUMERO CERRARPARENTESIS
    (38) term -> ABRIRPARENTESIS . term POR term CERRARPARENTESIS
    (39) term -> ABRIRPARENTESIS . term DIVIDIR term CERRARPARENTESIS
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 38
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 55

state 39

    (28) expr -> expr MENOS term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

    MAS             reduce using rule 28 (expr -> expr MENOS term .)
    MENOS           reduce using rule 28 (expr -> expr MENOS term .)
    $end            reduce using rule 28 (expr -> expr MENOS term .)
    DOSPUNTOS       reduce using rule 28 (expr -> expr MENOS term .)
    COMA            reduce using rule 28 (expr -> expr MENOS term .)
    IGUAL           reduce using rule 28 (expr -> expr MENOS term .)
    EXCLAMACION     reduce using rule 28 (expr -> expr MENOS term .)
    MAYORQUE        reduce using rule 28 (expr -> expr MENOS term .)
    MENORQUE        reduce using rule 28 (expr -> expr MENOS term .)
    OPERADORLOGICO  reduce using rule 28 (expr -> expr MENOS term .)
    ELSE            reduce using rule 28 (expr -> expr MENOS term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24


state 40

    (31) term -> term POR term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    MAS             reduce using rule 31 (term -> term POR term .)
    MENOS           reduce using rule 31 (term -> term POR term .)
    $end            reduce using rule 31 (term -> term POR term .)
    DOSPUNTOS       reduce using rule 31 (term -> term POR term .)
    COMA            reduce using rule 31 (term -> term POR term .)
    IGUAL           reduce using rule 31 (term -> term POR term .)
    EXCLAMACION     reduce using rule 31 (term -> term POR term .)
    MAYORQUE        reduce using rule 31 (term -> term POR term .)
    MENORQUE        reduce using rule 31 (term -> term POR term .)
    OPERADORLOGICO  reduce using rule 31 (term -> term POR term .)
    ELSE            reduce using rule 31 (term -> term POR term .)
    CERRARPARENTESIS reduce using rule 31 (term -> term POR term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24

  ! POR             [ reduce using rule 31 (term -> term POR term .) ]
  ! DIVIDIR         [ reduce using rule 31 (term -> term POR term .) ]


state 41

    (32) term -> term DIVIDIR term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    MAS             reduce using rule 32 (term -> term DIVIDIR term .)
    MENOS           reduce using rule 32 (term -> term DIVIDIR term .)
    $end            reduce using rule 32 (term -> term DIVIDIR term .)
    DOSPUNTOS       reduce using rule 32 (term -> term DIVIDIR term .)
    COMA            reduce using rule 32 (term -> term DIVIDIR term .)
    IGUAL           reduce using rule 32 (term -> term DIVIDIR term .)
    EXCLAMACION     reduce using rule 32 (term -> term DIVIDIR term .)
    MAYORQUE        reduce using rule 32 (term -> term DIVIDIR term .)
    MENORQUE        reduce using rule 32 (term -> term DIVIDIR term .)
    OPERADORLOGICO  reduce using rule 32 (term -> term DIVIDIR term .)
    ELSE            reduce using rule 32 (term -> term DIVIDIR term .)
    CERRARPARENTESIS reduce using rule 32 (term -> term DIVIDIR term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24

  ! POR             [ reduce using rule 32 (term -> term DIVIDIR term .) ]
  ! DIVIDIR         [ reduce using rule 32 (term -> term DIVIDIR term .) ]


state 42

    (27) expr -> ABRIRPARENTESIS expr MAS . term CERRARPARENTESIS
    (26) expr -> expr MAS . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 38
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 56

state 43

    (29) expr -> ABRIRPARENTESIS expr MENOS . term CERRARPARENTESIS
    (28) expr -> expr MENOS . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 38
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 57

state 44

    (33) term -> ABRIRPARENTESIS term POR . NUMERO CERRARPARENTESIS
    (38) term -> ABRIRPARENTESIS term POR . term CERRARPARENTESIS
    (31) term -> term POR . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    NUMERO          shift and go to state 59
    ABRIRPARENTESIS shift and go to state 38
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 58

state 45

    (34) term -> ABRIRPARENTESIS term DIVIDIR . NUMERO CERRARPARENTESIS
    (39) term -> ABRIRPARENTESIS term DIVIDIR . term CERRARPARENTESIS
    (32) term -> term DIVIDIR . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    NUMERO          shift and go to state 61
    ABRIRPARENTESIS shift and go to state 38
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    term                           shift and go to state 60

state 46

    (54) lambda -> LAMBDA parametros DOSPUNTOS . expr
    (55) lambda -> LAMBDA parametros DOSPUNTOS . evaluarCondicion
    (56) lambda -> LAMBDA parametros DOSPUNTOS . INT IF evaluarCondicion ELSE cualquierCosa
    (57) lambda -> LAMBDA parametros DOSPUNTOS . STR IF evaluarCondicion ELSE cualquierCosa
    (26) expr -> . expr MAS term
    (27) expr -> . ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
    (28) expr -> . expr MENOS term
    (29) expr -> . ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
    (30) expr -> . term
    (20) evaluarCondicion -> . expr condicion expr
    (21) evaluarCondicion -> . BOOLEANO
    (22) evaluarCondicion -> . expr IGUAL IGUAL STRING
    (23) evaluarCondicion -> . expr IGUAL IGUAL BOOLEANO
    (24) evaluarCondicion -> . expr EXCLAMACION IGUAL BOOLEANO
    (25) evaluarCondicion -> . evaluarCondicion OPERADORLOGICO evaluarCondicion
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    INT             shift and go to state 64
    STR             shift and go to state 65
    ABRIRPARENTESIS shift and go to state 13
    BOOLEANO        shift and go to state 66
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    expr                           shift and go to state 62
    evaluarCondicion               shift and go to state 63
    term                           shift and go to state 12

state 47

    (40) parametros -> parametros COMA . VARIABLE
    (42) parametros -> parametros COMA . assignVariable
    (1) assignVariable -> . VARIABLE IGUAL expr
    (2) assignVariable -> . VARIABLE IGUAL STRING
    (3) assignVariable -> . VARIABLE IGUAL lambda
    (4) assignVariable -> . VARIABLE IGUAL filter
    (5) assignVariable -> . VARIABLE IGUAL lista
    (6) assignVariable -> . VARIABLE IGUAL reduce
    (7) assignVariable -> . VARIABLE IGUAL map

    VARIABLE        shift and go to state 67

    assignVariable                 shift and go to state 68

state 48

    (48) filter -> FILTER ABRIRPARENTESIS lambda . COMA VARIABLE CERRARPARENTESIS
    (49) filter -> FILTER ABRIRPARENTESIS lambda . COMA lista CERRARPARENTESIS

    COMA            shift and go to state 69


state 49

    (8) lista -> ABRIRCORCHETE lisString CERRARCORCHETE .

    $end            reduce using rule 8 (lista -> ABRIRCORCHETE lisString CERRARCORCHETE .)
    DOSPUNTOS       reduce using rule 8 (lista -> ABRIRCORCHETE lisString CERRARCORCHETE .)
    COMA            reduce using rule 8 (lista -> ABRIRCORCHETE lisString CERRARCORCHETE .)
    CERRARPARENTESIS reduce using rule 8 (lista -> ABRIRCORCHETE lisString CERRARCORCHETE .)


state 50

    (10) lisString -> lisString COMA . STRING

    STRING          shift and go to state 70


state 51

    (9) lista -> ABRIRCORCHETE lisInt CERRARCORCHETE .

    $end            reduce using rule 9 (lista -> ABRIRCORCHETE lisInt CERRARCORCHETE .)
    DOSPUNTOS       reduce using rule 9 (lista -> ABRIRCORCHETE lisInt CERRARCORCHETE .)
    COMA            reduce using rule 9 (lista -> ABRIRCORCHETE lisInt CERRARCORCHETE .)
    CERRARPARENTESIS reduce using rule 9 (lista -> ABRIRCORCHETE lisInt CERRARCORCHETE .)


state 52

    (12) lisInt -> lisInt COMA . NUMERO

    NUMERO          shift and go to state 71


state 53

    (50) reduce -> REDUCE ABRIRPARENTESIS lambda . COMA VARIABLE CERRARPARENTESIS
    (51) reduce -> REDUCE ABRIRPARENTESIS lambda . COMA lista CERRARPARENTESIS

    COMA            shift and go to state 72


state 54

    (52) map -> MAPA ABRIRPARENTESIS lambda . COMA VARIABLE CERRARPARENTESIS
    (53) map -> MAPA ABRIRPARENTESIS lambda . COMA lista CERRARPARENTESIS

    COMA            shift and go to state 73


state 55

    (33) term -> ABRIRPARENTESIS term . POR NUMERO CERRARPARENTESIS
    (34) term -> ABRIRPARENTESIS term . DIVIDIR NUMERO CERRARPARENTESIS
    (38) term -> ABRIRPARENTESIS term . POR term CERRARPARENTESIS
    (39) term -> ABRIRPARENTESIS term . DIVIDIR term CERRARPARENTESIS
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

    POR             shift and go to state 44
    DIVIDIR         shift and go to state 45


state 56

    (27) expr -> ABRIRPARENTESIS expr MAS term . CERRARPARENTESIS
    (26) expr -> expr MAS term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

    CERRARPARENTESIS shift and go to state 74
    MAS             reduce using rule 26 (expr -> expr MAS term .)
    MENOS           reduce using rule 26 (expr -> expr MAS term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24


state 57

    (29) expr -> ABRIRPARENTESIS expr MENOS term . CERRARPARENTESIS
    (28) expr -> expr MENOS term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

    CERRARPARENTESIS shift and go to state 75
    MAS             reduce using rule 28 (expr -> expr MENOS term .)
    MENOS           reduce using rule 28 (expr -> expr MENOS term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24


state 58

    (38) term -> ABRIRPARENTESIS term POR term . CERRARPARENTESIS
    (31) term -> term POR term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    CERRARPARENTESIS shift and go to state 76
    MAS             reduce using rule 31 (term -> term POR term .)
    MENOS           reduce using rule 31 (term -> term POR term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24

  ! POR             [ reduce using rule 31 (term -> term POR term .) ]
  ! DIVIDIR         [ reduce using rule 31 (term -> term POR term .) ]


state 59

    (33) term -> ABRIRPARENTESIS term POR NUMERO . CERRARPARENTESIS
    (35) term -> NUMERO .

  ! shift/reduce conflict for CERRARPARENTESIS resolved as shift
    CERRARPARENTESIS shift and go to state 77
    POR             reduce using rule 35 (term -> NUMERO .)
    DIVIDIR         reduce using rule 35 (term -> NUMERO .)
    MAS             reduce using rule 35 (term -> NUMERO .)
    MENOS           reduce using rule 35 (term -> NUMERO .)

  ! CERRARPARENTESIS [ reduce using rule 35 (term -> NUMERO .) ]


state 60

    (39) term -> ABRIRPARENTESIS term DIVIDIR term . CERRARPARENTESIS
    (32) term -> term DIVIDIR term .
    (31) term -> term . POR term
    (32) term -> term . DIVIDIR term

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    CERRARPARENTESIS shift and go to state 78
    MAS             reduce using rule 32 (term -> term DIVIDIR term .)
    MENOS           reduce using rule 32 (term -> term DIVIDIR term .)
    POR             shift and go to state 23
    DIVIDIR         shift and go to state 24

  ! POR             [ reduce using rule 32 (term -> term DIVIDIR term .) ]
  ! DIVIDIR         [ reduce using rule 32 (term -> term DIVIDIR term .) ]


state 61

    (34) term -> ABRIRPARENTESIS term DIVIDIR NUMERO . CERRARPARENTESIS
    (35) term -> NUMERO .

  ! shift/reduce conflict for CERRARPARENTESIS resolved as shift
    CERRARPARENTESIS shift and go to state 79
    POR             reduce using rule 35 (term -> NUMERO .)
    DIVIDIR         reduce using rule 35 (term -> NUMERO .)
    MAS             reduce using rule 35 (term -> NUMERO .)
    MENOS           reduce using rule 35 (term -> NUMERO .)

  ! CERRARPARENTESIS [ reduce using rule 35 (term -> NUMERO .) ]


state 62

    (54) lambda -> LAMBDA parametros DOSPUNTOS expr .
    (26) expr -> expr . MAS term
    (28) expr -> expr . MENOS term
    (20) evaluarCondicion -> expr . condicion expr
    (22) evaluarCondicion -> expr . IGUAL IGUAL STRING
    (23) evaluarCondicion -> expr . IGUAL IGUAL BOOLEANO
    (24) evaluarCondicion -> expr . EXCLAMACION IGUAL BOOLEANO
    (14) condicion -> . IGUAL IGUAL
    (15) condicion -> . EXCLAMACION IGUAL
    (16) condicion -> . MAYORQUE IGUAL
    (17) condicion -> . MENORQUE IGUAL
    (18) condicion -> . MAYORQUE
    (19) condicion -> . MENORQUE

    $end            reduce using rule 54 (lambda -> LAMBDA parametros DOSPUNTOS expr .)
    DOSPUNTOS       reduce using rule 54 (lambda -> LAMBDA parametros DOSPUNTOS expr .)
    COMA            reduce using rule 54 (lambda -> LAMBDA parametros DOSPUNTOS expr .)
    MAS             shift and go to state 21
    MENOS           shift and go to state 22
    IGUAL           shift and go to state 81
    EXCLAMACION     shift and go to state 82
    MAYORQUE        shift and go to state 83
    MENORQUE        shift and go to state 84

    condicion                      shift and go to state 80

state 63

    (55) lambda -> LAMBDA parametros DOSPUNTOS evaluarCondicion .
    (25) evaluarCondicion -> evaluarCondicion . OPERADORLOGICO evaluarCondicion

    $end            reduce using rule 55 (lambda -> LAMBDA parametros DOSPUNTOS evaluarCondicion .)
    DOSPUNTOS       reduce using rule 55 (lambda -> LAMBDA parametros DOSPUNTOS evaluarCondicion .)
    COMA            reduce using rule 55 (lambda -> LAMBDA parametros DOSPUNTOS evaluarCondicion .)
    OPERADORLOGICO  shift and go to state 85


state 64

    (56) lambda -> LAMBDA parametros DOSPUNTOS INT . IF evaluarCondicion ELSE cualquierCosa

    IF              shift and go to state 86


state 65

    (57) lambda -> LAMBDA parametros DOSPUNTOS STR . IF evaluarCondicion ELSE cualquierCosa

    IF              shift and go to state 87


state 66

    (21) evaluarCondicion -> BOOLEANO .

    OPERADORLOGICO  reduce using rule 21 (evaluarCondicion -> BOOLEANO .)
    $end            reduce using rule 21 (evaluarCondicion -> BOOLEANO .)
    DOSPUNTOS       reduce using rule 21 (evaluarCondicion -> BOOLEANO .)
    COMA            reduce using rule 21 (evaluarCondicion -> BOOLEANO .)
    ELSE            reduce using rule 21 (evaluarCondicion -> BOOLEANO .)


state 67

    (40) parametros -> parametros COMA VARIABLE .
    (1) assignVariable -> VARIABLE . IGUAL expr
    (2) assignVariable -> VARIABLE . IGUAL STRING
    (3) assignVariable -> VARIABLE . IGUAL lambda
    (4) assignVariable -> VARIABLE . IGUAL filter
    (5) assignVariable -> VARIABLE . IGUAL lista
    (6) assignVariable -> VARIABLE . IGUAL reduce
    (7) assignVariable -> VARIABLE . IGUAL map

    DOSPUNTOS       reduce using rule 40 (parametros -> parametros COMA VARIABLE .)
    COMA            reduce using rule 40 (parametros -> parametros COMA VARIABLE .)
    IGUAL           shift and go to state 3


state 68

    (42) parametros -> parametros COMA assignVariable .

    DOSPUNTOS       reduce using rule 42 (parametros -> parametros COMA assignVariable .)
    COMA            reduce using rule 42 (parametros -> parametros COMA assignVariable .)


state 69

    (48) filter -> FILTER ABRIRPARENTESIS lambda COMA . VARIABLE CERRARPARENTESIS
    (49) filter -> FILTER ABRIRPARENTESIS lambda COMA . lista CERRARPARENTESIS
    (8) lista -> . ABRIRCORCHETE lisString CERRARCORCHETE
    (9) lista -> . ABRIRCORCHETE lisInt CERRARCORCHETE

    VARIABLE        shift and go to state 88
    ABRIRCORCHETE   shift and go to state 16

    lista                          shift and go to state 89

state 70

    (10) lisString -> lisString COMA STRING .

    CERRARCORCHETE  reduce using rule 10 (lisString -> lisString COMA STRING .)
    COMA            reduce using rule 10 (lisString -> lisString COMA STRING .)


state 71

    (12) lisInt -> lisInt COMA NUMERO .

    CERRARCORCHETE  reduce using rule 12 (lisInt -> lisInt COMA NUMERO .)
    COMA            reduce using rule 12 (lisInt -> lisInt COMA NUMERO .)


state 72

    (50) reduce -> REDUCE ABRIRPARENTESIS lambda COMA . VARIABLE CERRARPARENTESIS
    (51) reduce -> REDUCE ABRIRPARENTESIS lambda COMA . lista CERRARPARENTESIS
    (8) lista -> . ABRIRCORCHETE lisString CERRARCORCHETE
    (9) lista -> . ABRIRCORCHETE lisInt CERRARCORCHETE

    VARIABLE        shift and go to state 90
    ABRIRCORCHETE   shift and go to state 16

    lista                          shift and go to state 91

state 73

    (52) map -> MAPA ABRIRPARENTESIS lambda COMA . VARIABLE CERRARPARENTESIS
    (53) map -> MAPA ABRIRPARENTESIS lambda COMA . lista CERRARPARENTESIS
    (8) lista -> . ABRIRCORCHETE lisString CERRARCORCHETE
    (9) lista -> . ABRIRCORCHETE lisInt CERRARCORCHETE

    VARIABLE        shift and go to state 92
    ABRIRCORCHETE   shift and go to state 16

    lista                          shift and go to state 93

state 74

    (27) expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .

    MAS             reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    MENOS           reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    $end            reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    COMA            reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    IGUAL           reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    EXCLAMACION     reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    MAYORQUE        reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    MENORQUE        reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    OPERADORLOGICO  reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)
    ELSE            reduce using rule 27 (expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS .)


state 75

    (29) expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .

    MAS             reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    MENOS           reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    $end            reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    COMA            reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    IGUAL           reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    EXCLAMACION     reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    MAYORQUE        reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    MENORQUE        reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    OPERADORLOGICO  reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)
    ELSE            reduce using rule 29 (expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS .)


state 76

    (38) term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .

    POR             reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    DIVIDIR         reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    MAS             reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    MENOS           reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    $end            reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    COMA            reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    IGUAL           reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    EXCLAMACION     reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    MAYORQUE        reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    MENORQUE        reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    OPERADORLOGICO  reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    ELSE            reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)
    CERRARPARENTESIS reduce using rule 38 (term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS .)


state 77

    (33) term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .

    POR             reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    DIVIDIR         reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    MAS             reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    MENOS           reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    $end            reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    COMA            reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    IGUAL           reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    EXCLAMACION     reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    MAYORQUE        reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    MENORQUE        reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    OPERADORLOGICO  reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    ELSE            reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)
    CERRARPARENTESIS reduce using rule 33 (term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS .)


state 78

    (39) term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .

    POR             reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    DIVIDIR         reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    MAS             reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    MENOS           reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    $end            reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    COMA            reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    IGUAL           reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    EXCLAMACION     reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    MAYORQUE        reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    MENORQUE        reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    OPERADORLOGICO  reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    ELSE            reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)
    CERRARPARENTESIS reduce using rule 39 (term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS .)


state 79

    (34) term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .

    POR             reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    DIVIDIR         reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    MAS             reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    MENOS           reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    $end            reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    COMA            reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    IGUAL           reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    EXCLAMACION     reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    MAYORQUE        reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    MENORQUE        reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    OPERADORLOGICO  reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    ELSE            reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)
    CERRARPARENTESIS reduce using rule 34 (term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS .)


state 80

    (20) evaluarCondicion -> expr condicion . expr
    (26) expr -> . expr MAS term
    (27) expr -> . ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
    (28) expr -> . expr MENOS term
    (29) expr -> . ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
    (30) expr -> . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    ABRIRPARENTESIS shift and go to state 13
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    expr                           shift and go to state 94
    term                           shift and go to state 12

state 81

    (22) evaluarCondicion -> expr IGUAL . IGUAL STRING
    (23) evaluarCondicion -> expr IGUAL . IGUAL BOOLEANO
    (14) condicion -> IGUAL . IGUAL

    IGUAL           shift and go to state 95


state 82

    (24) evaluarCondicion -> expr EXCLAMACION . IGUAL BOOLEANO
    (15) condicion -> EXCLAMACION . IGUAL

    IGUAL           shift and go to state 96


state 83

    (16) condicion -> MAYORQUE . IGUAL
    (18) condicion -> MAYORQUE .

    IGUAL           shift and go to state 97
    ABRIRPARENTESIS reduce using rule 18 (condicion -> MAYORQUE .)
    NUMERO          reduce using rule 18 (condicion -> MAYORQUE .)
    VARIABLE        reduce using rule 18 (condicion -> MAYORQUE .)
    FLOAT           reduce using rule 18 (condicion -> MAYORQUE .)


state 84

    (17) condicion -> MENORQUE . IGUAL
    (19) condicion -> MENORQUE .

    IGUAL           shift and go to state 98
    ABRIRPARENTESIS reduce using rule 19 (condicion -> MENORQUE .)
    NUMERO          reduce using rule 19 (condicion -> MENORQUE .)
    VARIABLE        reduce using rule 19 (condicion -> MENORQUE .)
    FLOAT           reduce using rule 19 (condicion -> MENORQUE .)


state 85

    (25) evaluarCondicion -> evaluarCondicion OPERADORLOGICO . evaluarCondicion
    (20) evaluarCondicion -> . expr condicion expr
    (21) evaluarCondicion -> . BOOLEANO
    (22) evaluarCondicion -> . expr IGUAL IGUAL STRING
    (23) evaluarCondicion -> . expr IGUAL IGUAL BOOLEANO
    (24) evaluarCondicion -> . expr EXCLAMACION IGUAL BOOLEANO
    (25) evaluarCondicion -> . evaluarCondicion OPERADORLOGICO evaluarCondicion
    (26) expr -> . expr MAS term
    (27) expr -> . ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
    (28) expr -> . expr MENOS term
    (29) expr -> . ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
    (30) expr -> . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    BOOLEANO        shift and go to state 66
    ABRIRPARENTESIS shift and go to state 13
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    evaluarCondicion               shift and go to state 99
    expr                           shift and go to state 100
    term                           shift and go to state 12

state 86

    (56) lambda -> LAMBDA parametros DOSPUNTOS INT IF . evaluarCondicion ELSE cualquierCosa
    (20) evaluarCondicion -> . expr condicion expr
    (21) evaluarCondicion -> . BOOLEANO
    (22) evaluarCondicion -> . expr IGUAL IGUAL STRING
    (23) evaluarCondicion -> . expr IGUAL IGUAL BOOLEANO
    (24) evaluarCondicion -> . expr EXCLAMACION IGUAL BOOLEANO
    (25) evaluarCondicion -> . evaluarCondicion OPERADORLOGICO evaluarCondicion
    (26) expr -> . expr MAS term
    (27) expr -> . ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
    (28) expr -> . expr MENOS term
    (29) expr -> . ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
    (30) expr -> . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    BOOLEANO        shift and go to state 66
    ABRIRPARENTESIS shift and go to state 13
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    evaluarCondicion               shift and go to state 101
    expr                           shift and go to state 100
    term                           shift and go to state 12

state 87

    (57) lambda -> LAMBDA parametros DOSPUNTOS STR IF . evaluarCondicion ELSE cualquierCosa
    (20) evaluarCondicion -> . expr condicion expr
    (21) evaluarCondicion -> . BOOLEANO
    (22) evaluarCondicion -> . expr IGUAL IGUAL STRING
    (23) evaluarCondicion -> . expr IGUAL IGUAL BOOLEANO
    (24) evaluarCondicion -> . expr EXCLAMACION IGUAL BOOLEANO
    (25) evaluarCondicion -> . evaluarCondicion OPERADORLOGICO evaluarCondicion
    (26) expr -> . expr MAS term
    (27) expr -> . ABRIRPARENTESIS expr MAS term CERRARPARENTESIS
    (28) expr -> . expr MENOS term
    (29) expr -> . ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS
    (30) expr -> . term
    (31) term -> . term POR term
    (32) term -> . term DIVIDIR term
    (33) term -> . ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS
    (34) term -> . ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS
    (35) term -> . NUMERO
    (36) term -> . VARIABLE
    (37) term -> . FLOAT
    (38) term -> . ABRIRPARENTESIS term POR term CERRARPARENTESIS
    (39) term -> . ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS

    BOOLEANO        shift and go to state 66
    ABRIRPARENTESIS shift and go to state 13
    NUMERO          shift and go to state 19
    VARIABLE        shift and go to state 4
    FLOAT           shift and go to state 20

    evaluarCondicion               shift and go to state 102
    expr                           shift and go to state 100
    term                           shift and go to state 12

state 88

    (48) filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE . CERRARPARENTESIS

    CERRARPARENTESIS shift and go to state 103


state 89

    (49) filter -> FILTER ABRIRPARENTESIS lambda COMA lista . CERRARPARENTESIS

    CERRARPARENTESIS shift and go to state 104


state 90

    (50) reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE . CERRARPARENTESIS

    CERRARPARENTESIS shift and go to state 105


state 91

    (51) reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista . CERRARPARENTESIS

    CERRARPARENTESIS shift and go to state 106


state 92

    (52) map -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE . CERRARPARENTESIS

    CERRARPARENTESIS shift and go to state 107


state 93

    (53) map -> MAPA ABRIRPARENTESIS lambda COMA lista . CERRARPARENTESIS

    CERRARPARENTESIS shift and go to state 108


state 94

    (20) evaluarCondicion -> expr condicion expr .
    (26) expr -> expr . MAS term
    (28) expr -> expr . MENOS term

    OPERADORLOGICO  reduce using rule 20 (evaluarCondicion -> expr condicion expr .)
    $end            reduce using rule 20 (evaluarCondicion -> expr condicion expr .)
    DOSPUNTOS       reduce using rule 20 (evaluarCondicion -> expr condicion expr .)
    COMA            reduce using rule 20 (evaluarCondicion -> expr condicion expr .)
    ELSE            reduce using rule 20 (evaluarCondicion -> expr condicion expr .)
    MAS             shift and go to state 21
    MENOS           shift and go to state 22


state 95

    (22) evaluarCondicion -> expr IGUAL IGUAL . STRING
    (23) evaluarCondicion -> expr IGUAL IGUAL . BOOLEANO
    (14) condicion -> IGUAL IGUAL .

    STRING          shift and go to state 109
    BOOLEANO        shift and go to state 110
    ABRIRPARENTESIS reduce using rule 14 (condicion -> IGUAL IGUAL .)
    NUMERO          reduce using rule 14 (condicion -> IGUAL IGUAL .)
    VARIABLE        reduce using rule 14 (condicion -> IGUAL IGUAL .)
    FLOAT           reduce using rule 14 (condicion -> IGUAL IGUAL .)


state 96

    (24) evaluarCondicion -> expr EXCLAMACION IGUAL . BOOLEANO
    (15) condicion -> EXCLAMACION IGUAL .

    BOOLEANO        shift and go to state 111
    ABRIRPARENTESIS reduce using rule 15 (condicion -> EXCLAMACION IGUAL .)
    NUMERO          reduce using rule 15 (condicion -> EXCLAMACION IGUAL .)
    VARIABLE        reduce using rule 15 (condicion -> EXCLAMACION IGUAL .)
    FLOAT           reduce using rule 15 (condicion -> EXCLAMACION IGUAL .)


state 97

    (16) condicion -> MAYORQUE IGUAL .

    ABRIRPARENTESIS reduce using rule 16 (condicion -> MAYORQUE IGUAL .)
    NUMERO          reduce using rule 16 (condicion -> MAYORQUE IGUAL .)
    VARIABLE        reduce using rule 16 (condicion -> MAYORQUE IGUAL .)
    FLOAT           reduce using rule 16 (condicion -> MAYORQUE IGUAL .)


state 98

    (17) condicion -> MENORQUE IGUAL .

    ABRIRPARENTESIS reduce using rule 17 (condicion -> MENORQUE IGUAL .)
    NUMERO          reduce using rule 17 (condicion -> MENORQUE IGUAL .)
    VARIABLE        reduce using rule 17 (condicion -> MENORQUE IGUAL .)
    FLOAT           reduce using rule 17 (condicion -> MENORQUE IGUAL .)


state 99

    (25) evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion .
    (25) evaluarCondicion -> evaluarCondicion . OPERADORLOGICO evaluarCondicion

  ! shift/reduce conflict for OPERADORLOGICO resolved as shift
    $end            reduce using rule 25 (evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion .)
    DOSPUNTOS       reduce using rule 25 (evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion .)
    COMA            reduce using rule 25 (evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion .)
    ELSE            reduce using rule 25 (evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion .)
    OPERADORLOGICO  shift and go to state 85

  ! OPERADORLOGICO  [ reduce using rule 25 (evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion .) ]


state 100

    (20) evaluarCondicion -> expr . condicion expr
    (22) evaluarCondicion -> expr . IGUAL IGUAL STRING
    (23) evaluarCondicion -> expr . IGUAL IGUAL BOOLEANO
    (24) evaluarCondicion -> expr . EXCLAMACION IGUAL BOOLEANO
    (26) expr -> expr . MAS term
    (28) expr -> expr . MENOS term
    (14) condicion -> . IGUAL IGUAL
    (15) condicion -> . EXCLAMACION IGUAL
    (16) condicion -> . MAYORQUE IGUAL
    (17) condicion -> . MENORQUE IGUAL
    (18) condicion -> . MAYORQUE
    (19) condicion -> . MENORQUE

    IGUAL           shift and go to state 81
    EXCLAMACION     shift and go to state 82
    MAS             shift and go to state 21
    MENOS           shift and go to state 22
    MAYORQUE        shift and go to state 83
    MENORQUE        shift and go to state 84

    condicion                      shift and go to state 80

state 101

    (56) lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion . ELSE cualquierCosa
    (25) evaluarCondicion -> evaluarCondicion . OPERADORLOGICO evaluarCondicion

    ELSE            shift and go to state 112
    OPERADORLOGICO  shift and go to state 85


state 102

    (57) lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion . ELSE cualquierCosa
    (25) evaluarCondicion -> evaluarCondicion . OPERADORLOGICO evaluarCondicion

    ELSE            shift and go to state 113
    OPERADORLOGICO  shift and go to state 85


state 103

    (48) filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .

    $end            reduce using rule 48 (filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 48 (filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)
    COMA            reduce using rule 48 (filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)


state 104

    (49) filter -> FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .

    $end            reduce using rule 49 (filter -> FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 49 (filter -> FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)
    COMA            reduce using rule 49 (filter -> FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)


state 105

    (50) reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .

    $end            reduce using rule 50 (reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 50 (reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)
    COMA            reduce using rule 50 (reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)


state 106

    (51) reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .

    $end            reduce using rule 51 (reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 51 (reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)
    COMA            reduce using rule 51 (reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)


state 107

    (52) map -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .

    $end            reduce using rule 52 (map -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 52 (map -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)
    COMA            reduce using rule 52 (map -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS .)


state 108

    (53) map -> MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .

    $end            reduce using rule 53 (map -> MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)
    DOSPUNTOS       reduce using rule 53 (map -> MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)
    COMA            reduce using rule 53 (map -> MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS .)


state 109

    (22) evaluarCondicion -> expr IGUAL IGUAL STRING .

    OPERADORLOGICO  reduce using rule 22 (evaluarCondicion -> expr IGUAL IGUAL STRING .)
    $end            reduce using rule 22 (evaluarCondicion -> expr IGUAL IGUAL STRING .)
    DOSPUNTOS       reduce using rule 22 (evaluarCondicion -> expr IGUAL IGUAL STRING .)
    COMA            reduce using rule 22 (evaluarCondicion -> expr IGUAL IGUAL STRING .)
    ELSE            reduce using rule 22 (evaluarCondicion -> expr IGUAL IGUAL STRING .)


state 110

    (23) evaluarCondicion -> expr IGUAL IGUAL BOOLEANO .

    OPERADORLOGICO  reduce using rule 23 (evaluarCondicion -> expr IGUAL IGUAL BOOLEANO .)
    $end            reduce using rule 23 (evaluarCondicion -> expr IGUAL IGUAL BOOLEANO .)
    DOSPUNTOS       reduce using rule 23 (evaluarCondicion -> expr IGUAL IGUAL BOOLEANO .)
    COMA            reduce using rule 23 (evaluarCondicion -> expr IGUAL IGUAL BOOLEANO .)
    ELSE            reduce using rule 23 (evaluarCondicion -> expr IGUAL IGUAL BOOLEANO .)


state 111

    (24) evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO .

    OPERADORLOGICO  reduce using rule 24 (evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO .)
    $end            reduce using rule 24 (evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO .)
    DOSPUNTOS       reduce using rule 24 (evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO .)
    COMA            reduce using rule 24 (evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO .)
    ELSE            reduce using rule 24 (evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO .)


state 112

    (56) lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE . cualquierCosa
    (45) cualquierCosa -> . STRING
    (46) cualquierCosa -> . NUMERO
    (47) cualquierCosa -> . VARIABLE

    STRING          shift and go to state 115
    NUMERO          shift and go to state 116
    VARIABLE        shift and go to state 117

    cualquierCosa                  shift and go to state 114

state 113

    (57) lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE . cualquierCosa
    (45) cualquierCosa -> . STRING
    (46) cualquierCosa -> . NUMERO
    (47) cualquierCosa -> . VARIABLE

    STRING          shift and go to state 115
    NUMERO          shift and go to state 116
    VARIABLE        shift and go to state 117

    cualquierCosa                  shift and go to state 118

state 114

    (56) lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa .

    $end            reduce using rule 56 (lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa .)
    DOSPUNTOS       reduce using rule 56 (lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa .)
    COMA            reduce using rule 56 (lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa .)


state 115

    (45) cualquierCosa -> STRING .

    $end            reduce using rule 45 (cualquierCosa -> STRING .)
    DOSPUNTOS       reduce using rule 45 (cualquierCosa -> STRING .)
    COMA            reduce using rule 45 (cualquierCosa -> STRING .)


state 116

    (46) cualquierCosa -> NUMERO .

    $end            reduce using rule 46 (cualquierCosa -> NUMERO .)
    DOSPUNTOS       reduce using rule 46 (cualquierCosa -> NUMERO .)
    COMA            reduce using rule 46 (cualquierCosa -> NUMERO .)


state 117

    (47) cualquierCosa -> VARIABLE .

    $end            reduce using rule 47 (cualquierCosa -> VARIABLE .)
    DOSPUNTOS       reduce using rule 47 (cualquierCosa -> VARIABLE .)
    COMA            reduce using rule 47 (cualquierCosa -> VARIABLE .)


state 118

    (57) lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa .

    $end            reduce using rule 57 (lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa .)
    DOSPUNTOS       reduce using rule 57 (lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa .)
    COMA            reduce using rule 57 (lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for POR in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 40 resolved as shift
WARNING: shift/reduce conflict for POR in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 41 resolved as shift
WARNING: shift/reduce conflict for POR in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 58 resolved as shift
WARNING: shift/reduce conflict for CERRARPARENTESIS in state 59 resolved as shift
WARNING: shift/reduce conflict for POR in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 60 resolved as shift
WARNING: shift/reduce conflict for CERRARPARENTESIS in state 61 resolved as shift
WARNING: shift/reduce conflict for OPERADORLOGICO in state 99 resolved as shift
