
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRIRCORCHETE ABRIRLLAVES ABRIRPARENTESIS BOOLEANO CERRARCORCHETE CERRARLLAVES CERRARPARENTESIS COMA DIVIDIR DOSPUNTOS ELSE EXCLAMACION FILTER IF IGUAL INT LAMBDA MAPA MAS MAYORQUE MENORQUE MENOS NUMERO OPERADORLOGICO POR PUNTOYCOMA REDUCE STR STRING VARIABLEassignVariable : VARIABLE IGUAL expr\n                    | VARIABLE IGUAL STRING\n                    | VARIABLE IGUAL lambda\n                    | VARIABLE IGUAL filter\n                    | VARIABLE IGUAL listalista : ABRIRCORCHETE lisString CERRARCORCHETE\n            | ABRIRCORCHETE lisInt CERRARCORCHETElisString : lisString COMA STRING\n                | STRINGlisInt : lisInt COMA NUMERO\n                | NUMEROcondicion : IGUAL IGUAL\n                | EXCLAMACION IGUAL\n                | MAYORQUE IGUAL\n                | MENORQUE IGUAL\n                | MAYORQUE\n                | MENORQUEevaluarCondicion : expr condicion expr\n                        | BOOLEANO\n                        | expr IGUAL IGUAL BOOLEANO\n                        | expr EXCLAMACION IGUAL BOOLEANO\n                        | evaluarCondicion OPERADORLOGICO evaluarCondicionexpr : expr MAS term\n            | ABRIRPARENTESIS expr MAS term CERRARPARENTESIS\n            | expr MENOS term\n            | ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS\n            | termterm : term POR term\n            | term DIVIDIR term\n            | ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS\n            | ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS\n            | NUMERO\n            | VARIABLE\n            | ABRIRPARENTESIS term POR term CERRARPARENTESIS\n            | ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESISparametros : parametros COMA VARIABLE\n                | VARIABLE\n                | parametros COMA assignVariable\n                | assignVariable\n                | cualquierCosa : STRING\n                    | NUMERO\n                    | VARIABLElambda : LAMBDA parametros DOSPUNTOS expr\n            | LAMBDA parametros DOSPUNTOS evaluarCondicion\n            | LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosafilter : FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS\n            | FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESISreduce : REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS\n            | REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESISmapa : MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS\n            | MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS'
    
_lr_action_items = {'VARIABLE':([0,3,11,12,16,17,18,19,31,35,36,37,38,39,40,59,68,71,72,73,74,78,79,80,81,89,],[2,4,4,23,4,4,4,4,4,4,4,4,4,4,57,75,4,-16,-17,4,4,-12,-13,-14,-15,93,]),'$end':([1,4,5,6,7,8,9,10,15,30,32,33,34,42,44,53,54,56,62,63,64,65,66,67,77,82,85,86,87,88,90,91,92,93,],[0,-33,-1,-2,-3,-4,-5,-27,-32,-23,-25,-28,-29,-6,-7,-44,-45,-19,-24,-26,-34,-30,-35,-31,-18,-22,-47,-48,-20,-21,-46,-41,-42,-43,]),'IGUAL':([2,4,10,15,23,30,32,33,34,53,57,62,63,64,65,66,67,69,70,71,72,83,],[3,-33,-27,-32,3,-23,-25,-28,-29,69,3,-24,-26,-34,-30,-35,-31,78,79,80,81,69,]),'STRING':([3,14,43,89,],[6,28,60,91,]),'ABRIRPARENTESIS':([3,11,13,16,17,18,19,31,35,36,37,38,39,68,71,72,73,74,78,79,80,81,],[11,11,25,31,31,31,31,31,31,31,31,31,11,11,-16,-17,11,11,-12,-13,-14,-15,]),'LAMBDA':([3,25,],[12,12,]),'FILTER':([3,],[13,]),'ABRIRCORCHETE':([3,59,],[14,14,]),'NUMERO':([3,11,14,16,17,18,19,31,35,36,37,38,39,45,68,71,72,73,74,78,79,80,81,89,],[15,15,29,15,15,15,15,15,15,15,50,52,15,61,15,-16,-17,15,15,-12,-13,-14,-15,92,]),'POR':([4,10,15,21,30,32,33,34,46,47,48,49,50,51,52,64,65,66,67,],[-33,18,-32,37,18,18,18,18,37,18,18,18,-32,18,-32,-34,-30,-35,-31,]),'DIVIDIR':([4,10,15,21,30,32,33,34,46,47,48,49,50,51,52,64,65,66,67,],[-33,19,-32,38,19,19,19,19,38,19,19,19,-32,19,-32,-34,-30,-35,-31,]),'MAS':([4,5,10,15,20,21,30,32,33,34,47,48,49,50,51,52,53,62,63,64,65,66,67,77,83,],[-33,16,-27,-32,35,-27,-23,-25,-28,-29,-23,-25,-28,-32,-29,-32,16,-24,-26,-34,-30,-35,-31,16,16,]),'MENOS':([4,5,10,15,20,21,30,32,33,34,47,48,49,50,51,52,53,62,63,64,65,66,67,77,83,],[-33,17,-27,-32,36,-27,-23,-25,-28,-29,-23,-25,-28,-32,-29,-32,17,-24,-26,-34,-30,-35,-31,17,17,]),'DOSPUNTOS':([4,5,6,7,8,9,10,12,15,22,23,24,30,32,33,34,42,44,53,54,56,57,58,62,63,64,65,66,67,77,82,85,86,87,88,90,91,92,93,],[-33,-1,-2,-3,-4,-5,-27,-40,-32,39,-37,-39,-23,-25,-28,-29,-6,-7,-44,-45,-19,-36,-38,-24,-26,-34,-30,-35,-31,-18,-22,-47,-48,-20,-21,-46,-41,-42,-43,]),'COMA':([4,5,6,7,8,9,10,12,15,22,23,24,26,27,28,29,30,32,33,34,41,42,44,53,54,56,57,58,60,61,62,63,64,65,66,67,77,82,85,86,87,88,90,91,92,93,],[-33,-1,-2,-3,-4,-5,-27,-40,-32,40,-37,-39,43,45,-9,-11,-23,-25,-28,-29,59,-6,-7,-44,-45,-19,-36,-38,-8,-10,-24,-26,-34,-30,-35,-31,-18,-22,-47,-48,-20,-21,-46,-41,-42,-43,]),'EXCLAMACION':([4,10,15,30,32,33,34,53,62,63,64,65,66,67,83,],[-33,-27,-32,-23,-25,-28,-29,70,-24,-26,-34,-30,-35,-31,70,]),'MAYORQUE':([4,10,15,30,32,33,34,53,62,63,64,65,66,67,83,],[-33,-27,-32,-23,-25,-28,-29,71,-24,-26,-34,-30,-35,-31,71,]),'MENORQUE':([4,10,15,30,32,33,34,53,62,63,64,65,66,67,83,],[-33,-27,-32,-23,-25,-28,-29,72,-24,-26,-34,-30,-35,-31,72,]),'OPERADORLOGICO':([4,10,15,30,32,33,34,54,56,62,63,64,65,66,67,77,82,84,87,88,],[-33,-27,-32,-23,-25,-28,-29,73,-19,-24,-26,-34,-30,-35,-31,-18,73,73,-20,-21,]),'ELSE':([4,10,15,30,32,33,34,56,62,63,64,65,66,67,77,82,84,87,88,],[-33,-27,-32,-23,-25,-28,-29,-19,-24,-26,-34,-30,-35,-31,-18,-22,89,-20,-21,]),'CERRARPARENTESIS':([4,15,33,34,42,44,47,48,49,50,51,52,64,65,66,67,75,76,],[-33,-32,-28,-29,-6,-7,62,63,64,65,66,67,-34,-30,-35,-31,85,86,]),'CERRARCORCHETE':([26,27,28,29,60,61,],[42,44,-9,-11,-8,-10,]),'INT':([39,],[55,]),'BOOLEANO':([39,73,74,78,79,],[56,56,56,87,88,]),'IF':([55,],[74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignVariable':([0,12,40,],[1,24,58,]),'expr':([3,11,39,68,73,74,],[5,20,53,77,83,83,]),'lambda':([3,25,],[7,41,]),'filter':([3,],[8,]),'lista':([3,59,],[9,76,]),'term':([3,11,16,17,18,19,31,35,36,37,38,39,68,73,74,],[10,21,30,32,33,34,46,47,48,49,51,10,10,10,10,]),'parametros':([12,],[22,]),'lisString':([14,],[26,]),'lisInt':([14,],[27,]),'evaluarCondicion':([39,73,74,],[54,82,84,]),'condicion':([53,83,],[68,68,]),'cualquierCosa':([89,],[90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assignVariable","S'",1,None,None,None),
  ('assignVariable -> VARIABLE IGUAL expr','assignVariable',3,'p_assignVariable','Parser.py',6),
  ('assignVariable -> VARIABLE IGUAL STRING','assignVariable',3,'p_assignVariable','Parser.py',7),
  ('assignVariable -> VARIABLE IGUAL lambda','assignVariable',3,'p_assignVariable','Parser.py',8),
  ('assignVariable -> VARIABLE IGUAL filter','assignVariable',3,'p_assignVariable','Parser.py',9),
  ('assignVariable -> VARIABLE IGUAL lista','assignVariable',3,'p_assignVariable','Parser.py',10),
  ('lista -> ABRIRCORCHETE lisString CERRARCORCHETE','lista',3,'p_lista','Parser.py',12),
  ('lista -> ABRIRCORCHETE lisInt CERRARCORCHETE','lista',3,'p_lista','Parser.py',13),
  ('lisString -> lisString COMA STRING','lisString',3,'p_lisString','Parser.py',16),
  ('lisString -> STRING','lisString',1,'p_lisString','Parser.py',17),
  ('lisInt -> lisInt COMA NUMERO','lisInt',3,'p_lisInt','Parser.py',20),
  ('lisInt -> NUMERO','lisInt',1,'p_lisInt','Parser.py',21),
  ('condicion -> IGUAL IGUAL','condicion',2,'p_condicion','Parser.py',27),
  ('condicion -> EXCLAMACION IGUAL','condicion',2,'p_condicion','Parser.py',28),
  ('condicion -> MAYORQUE IGUAL','condicion',2,'p_condicion','Parser.py',29),
  ('condicion -> MENORQUE IGUAL','condicion',2,'p_condicion','Parser.py',30),
  ('condicion -> MAYORQUE','condicion',1,'p_condicion','Parser.py',31),
  ('condicion -> MENORQUE','condicion',1,'p_condicion','Parser.py',32),
  ('evaluarCondicion -> expr condicion expr','evaluarCondicion',3,'p_evaluarCondicion','Parser.py',35),
  ('evaluarCondicion -> BOOLEANO','evaluarCondicion',1,'p_evaluarCondicion','Parser.py',36),
  ('evaluarCondicion -> expr IGUAL IGUAL BOOLEANO','evaluarCondicion',4,'p_evaluarCondicion','Parser.py',37),
  ('evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO','evaluarCondicion',4,'p_evaluarCondicion','Parser.py',38),
  ('evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion','evaluarCondicion',3,'p_evaluarCondicion','Parser.py',39),
  ('expr -> expr MAS term','expr',3,'p_expr','Parser.py',42),
  ('expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS','expr',5,'p_expr','Parser.py',43),
  ('expr -> expr MENOS term','expr',3,'p_expr','Parser.py',44),
  ('expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS','expr',5,'p_expr','Parser.py',45),
  ('expr -> term','expr',1,'p_expr','Parser.py',46),
  ('term -> term POR term','term',3,'p_term','Parser.py',49),
  ('term -> term DIVIDIR term','term',3,'p_term','Parser.py',50),
  ('term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS','term',5,'p_term','Parser.py',51),
  ('term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS','term',5,'p_term','Parser.py',52),
  ('term -> NUMERO','term',1,'p_term','Parser.py',53),
  ('term -> VARIABLE','term',1,'p_term','Parser.py',54),
  ('term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS','term',5,'p_term','Parser.py',55),
  ('term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS','term',5,'p_term','Parser.py',56),
  ('parametros -> parametros COMA VARIABLE','parametros',3,'p_parametros','Parser.py',59),
  ('parametros -> VARIABLE','parametros',1,'p_parametros','Parser.py',60),
  ('parametros -> parametros COMA assignVariable','parametros',3,'p_parametros','Parser.py',61),
  ('parametros -> assignVariable','parametros',1,'p_parametros','Parser.py',62),
  ('parametros -> <empty>','parametros',0,'p_parametros','Parser.py',63),
  ('cualquierCosa -> STRING','cualquierCosa',1,'p_cualquierCosa','Parser.py',65),
  ('cualquierCosa -> NUMERO','cualquierCosa',1,'p_cualquierCosa','Parser.py',66),
  ('cualquierCosa -> VARIABLE','cualquierCosa',1,'p_cualquierCosa','Parser.py',67),
  ('lambda -> LAMBDA parametros DOSPUNTOS expr','lambda',4,'p_lambda','Parser.py',69),
  ('lambda -> LAMBDA parametros DOSPUNTOS evaluarCondicion','lambda',4,'p_lambda','Parser.py',70),
  ('lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa','lambda',8,'p_lambda','Parser.py',71),
  ('filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS','filter',6,'p_filter','Parser.py',74),
  ('filter -> FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS','filter',6,'p_filter','Parser.py',75),
  ('reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS','reduce',6,'p_reduce','Parser.py',78),
  ('reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS','reduce',6,'p_reduce','Parser.py',79),
  ('mapa -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS','mapa',6,'p_mapa','Parser.py',82),
  ('mapa -> MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS','mapa',6,'p_mapa','Parser.py',83),
]
