
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRIRCORCHETE ABRIRLLAVES ABRIRPARENTESIS BOOLEANO CERRARCORCHETE CERRARLLAVES CERRARPARENTESIS COMA DIVIDIR DOSPUNTOS ELSE EXCLAMACION FILTER FLOAT IF IGUAL INT LAMBDA MAPA MAS MAYORQUE MENORQUE MENOS NUMERO OPERADORLOGICO POR PUNTOYCOMA REDUCE STR STRING VARIABLEassignVariable : VARIABLE IGUAL expr\n                    | VARIABLE IGUAL STRING\n                    | VARIABLE IGUAL lambda\n                    | VARIABLE IGUAL filter\n                    | VARIABLE IGUAL lista\n                    | VARIABLE IGUAL reduce\n                    | VARIABLE IGUAL maplista : ABRIRCORCHETE lisString CERRARCORCHETE\n            | ABRIRCORCHETE lisInt CERRARCORCHETElisString : lisString COMA STRING\n                | STRINGlisInt : lisInt COMA NUMERO\n                | NUMEROcondicion : IGUAL IGUAL\n                | EXCLAMACION IGUAL\n                | MAYORQUE IGUAL\n                | MENORQUE IGUAL\n                | MAYORQUE\n                | MENORQUEevaluarCondicion : expr condicion expr\n                        | BOOLEANO\n                        | expr IGUAL IGUAL STRING\n                        | expr IGUAL IGUAL BOOLEANO\n                        | expr EXCLAMACION IGUAL BOOLEANO\n                        | evaluarCondicion OPERADORLOGICO evaluarCondicionexpr : expr MAS term\n            | ABRIRPARENTESIS expr MAS term CERRARPARENTESIS\n            | expr MENOS term\n            | ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS\n            | termterm : term POR term\n            | term DIVIDIR term\n            | ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS\n            | ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS\n            | NUMERO\n            | VARIABLE\n            | FLOAT\n            | ABRIRPARENTESIS term POR term CERRARPARENTESIS\n            | ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESISparametros : parametros COMA VARIABLE\n                    | VARIABLE\n                    | parametros COMA assignVariable\n                    | assignVariable\n                    | cualquierCosa : STRING\n                    | NUMERO\n                    | VARIABLEfilter : FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS\n            | FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESISreduce : REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS\n            | REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESISmap : MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS\n            | MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESISlambda : LAMBDA parametros DOSPUNTOS expr\n            | LAMBDA parametros DOSPUNTOS evaluarCondicion\n            | LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa\n            | LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa'
    
_lr_action_items = {'VARIABLE':([0,3,13,14,21,22,23,24,38,42,43,44,45,46,47,69,72,73,80,83,84,85,86,87,95,96,97,98,112,113,],[2,4,4,28,4,4,4,4,4,4,4,4,4,4,67,88,90,92,4,-18,-19,4,4,4,-14,-15,-16,-17,117,117,]),'$end':([1,4,5,6,7,8,9,10,11,12,19,20,37,39,40,41,49,51,62,63,66,74,75,76,77,78,79,94,99,103,104,105,106,107,108,109,110,111,114,115,116,117,118,],[0,-36,-1,-2,-3,-4,-5,-6,-7,-30,-35,-37,-26,-28,-31,-32,-8,-9,-54,-55,-21,-27,-29,-38,-33,-39,-34,-20,-25,-48,-49,-50,-51,-52,-53,-22,-23,-24,-56,-45,-46,-47,-57,]),'IGUAL':([2,4,12,19,20,28,37,39,40,41,62,67,74,75,76,77,78,79,81,82,83,84,100,],[3,-36,-30,-35,-37,3,-26,-28,-31,-32,81,3,-27,-29,-38,-33,-39,-34,95,96,97,98,81,]),'STRING':([3,16,50,95,112,113,],[6,33,70,109,115,115,]),'ABRIRPARENTESIS':([3,13,15,17,18,21,22,23,24,38,42,43,44,45,46,80,83,84,85,86,87,95,96,97,98,],[13,13,30,35,36,38,38,38,38,38,38,38,38,38,13,13,-18,-19,13,13,13,-14,-15,-16,-17,]),'LAMBDA':([3,30,35,36,],[14,14,14,14,]),'FILTER':([3,],[15,]),'ABRIRCORCHETE':([3,69,72,73,],[16,16,16,16,]),'REDUCE':([3,],[17,]),'MAPA':([3,],[18,]),'NUMERO':([3,13,16,21,22,23,24,38,42,43,44,45,46,52,80,83,84,85,86,87,95,96,97,98,112,113,],[19,19,34,19,19,19,19,19,19,19,59,61,19,71,19,-18,-19,19,19,19,-14,-15,-16,-17,116,116,]),'FLOAT':([3,13,21,22,23,24,38,42,43,44,45,46,80,83,84,85,86,87,95,96,97,98,],[20,20,20,20,20,20,20,20,20,20,20,20,20,-18,-19,20,20,20,-14,-15,-16,-17,]),'POR':([4,12,19,20,26,37,39,40,41,55,56,57,58,59,60,61,76,77,78,79,],[-36,23,-35,-37,44,23,23,23,23,44,23,23,23,-35,23,-35,-38,-33,-39,-34,]),'DIVIDIR':([4,12,19,20,26,37,39,40,41,55,56,57,58,59,60,61,76,77,78,79,],[-36,24,-35,-37,45,24,24,24,24,45,24,24,24,-35,24,-35,-38,-33,-39,-34,]),'MAS':([4,5,12,19,20,25,26,37,39,40,41,56,57,58,59,60,61,62,74,75,76,77,78,79,94,100,],[-36,21,-30,-35,-37,42,-30,-26,-28,-31,-32,-26,-28,-31,-35,-32,-35,21,-27,-29,-38,-33,-39,-34,21,21,]),'MENOS':([4,5,12,19,20,25,26,37,39,40,41,56,57,58,59,60,61,62,74,75,76,77,78,79,94,100,],[-36,22,-30,-35,-37,43,-30,-26,-28,-31,-32,-26,-28,-31,-35,-32,-35,22,-27,-29,-38,-33,-39,-34,22,22,]),'DOSPUNTOS':([4,5,6,7,8,9,10,11,12,14,19,20,27,28,29,37,39,40,41,49,51,62,63,66,67,68,74,75,76,77,78,79,94,99,103,104,105,106,107,108,109,110,111,114,115,116,117,118,],[-36,-1,-2,-3,-4,-5,-6,-7,-30,-44,-35,-37,46,-41,-43,-26,-28,-31,-32,-8,-9,-54,-55,-21,-40,-42,-27,-29,-38,-33,-39,-34,-20,-25,-48,-49,-50,-51,-52,-53,-22,-23,-24,-56,-45,-46,-47,-57,]),'COMA':([4,5,6,7,8,9,10,11,12,14,19,20,27,28,29,31,32,33,34,37,39,40,41,48,49,51,53,54,62,63,66,67,68,70,71,74,75,76,77,78,79,94,99,103,104,105,106,107,108,109,110,111,114,115,116,117,118,],[-36,-1,-2,-3,-4,-5,-6,-7,-30,-44,-35,-37,47,-41,-43,50,52,-11,-13,-26,-28,-31,-32,69,-8,-9,72,73,-54,-55,-21,-40,-42,-10,-12,-27,-29,-38,-33,-39,-34,-20,-25,-48,-49,-50,-51,-52,-53,-22,-23,-24,-56,-45,-46,-47,-57,]),'EXCLAMACION':([4,12,19,20,37,39,40,41,62,74,75,76,77,78,79,100,],[-36,-30,-35,-37,-26,-28,-31,-32,82,-27,-29,-38,-33,-39,-34,82,]),'MAYORQUE':([4,12,19,20,37,39,40,41,62,74,75,76,77,78,79,100,],[-36,-30,-35,-37,-26,-28,-31,-32,83,-27,-29,-38,-33,-39,-34,83,]),'MENORQUE':([4,12,19,20,37,39,40,41,62,74,75,76,77,78,79,100,],[-36,-30,-35,-37,-26,-28,-31,-32,84,-27,-29,-38,-33,-39,-34,84,]),'OPERADORLOGICO':([4,12,19,20,37,39,40,41,63,66,74,75,76,77,78,79,94,99,101,102,109,110,111,],[-36,-30,-35,-37,-26,-28,-31,-32,85,-21,-27,-29,-38,-33,-39,-34,-20,85,85,85,-22,-23,-24,]),'ELSE':([4,12,19,20,37,39,40,41,66,74,75,76,77,78,79,94,99,101,102,109,110,111,],[-36,-30,-35,-37,-26,-28,-31,-32,-21,-27,-29,-38,-33,-39,-34,-20,-25,112,113,-22,-23,-24,]),'CERRARPARENTESIS':([4,19,20,40,41,49,51,56,57,58,59,60,61,76,77,78,79,88,89,90,91,92,93,],[-36,-35,-37,-31,-32,-8,-9,74,75,76,77,78,79,-38,-33,-39,-34,103,104,105,106,107,108,]),'CERRARCORCHETE':([31,32,33,34,70,71,],[49,51,-11,-13,-10,-12,]),'INT':([46,],[64,]),'STR':([46,],[65,]),'BOOLEANO':([46,85,86,87,95,96,],[66,66,66,66,110,111,]),'IF':([64,65,],[86,87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignVariable':([0,14,47,],[1,29,68,]),'expr':([3,13,46,80,85,86,87,],[5,25,62,94,100,100,100,]),'lambda':([3,30,35,36,],[7,48,53,54,]),'filter':([3,],[8,]),'lista':([3,69,72,73,],[9,89,91,93,]),'reduce':([3,],[10,]),'map':([3,],[11,]),'term':([3,13,21,22,23,24,38,42,43,44,45,46,80,85,86,87,],[12,26,37,39,40,41,55,56,57,58,60,12,12,12,12,12,]),'parametros':([14,],[27,]),'lisString':([16,],[31,]),'lisInt':([16,],[32,]),'evaluarCondicion':([46,85,86,87,],[63,99,101,102,]),'condicion':([62,100,],[80,80,]),'cualquierCosa':([112,113,],[114,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assignVariable","S'",1,None,None,None),
  ('assignVariable -> VARIABLE IGUAL expr','assignVariable',3,'p_assignVariable','Parser.py',6),
  ('assignVariable -> VARIABLE IGUAL STRING','assignVariable',3,'p_assignVariable','Parser.py',7),
  ('assignVariable -> VARIABLE IGUAL lambda','assignVariable',3,'p_assignVariable','Parser.py',8),
  ('assignVariable -> VARIABLE IGUAL filter','assignVariable',3,'p_assignVariable','Parser.py',9),
  ('assignVariable -> VARIABLE IGUAL lista','assignVariable',3,'p_assignVariable','Parser.py',10),
  ('assignVariable -> VARIABLE IGUAL reduce','assignVariable',3,'p_assignVariable','Parser.py',11),
  ('assignVariable -> VARIABLE IGUAL map','assignVariable',3,'p_assignVariable','Parser.py',12),
  ('lista -> ABRIRCORCHETE lisString CERRARCORCHETE','lista',3,'p_lista','Parser.py',15),
  ('lista -> ABRIRCORCHETE lisInt CERRARCORCHETE','lista',3,'p_lista','Parser.py',16),
  ('lisString -> lisString COMA STRING','lisString',3,'p_lisString','Parser.py',19),
  ('lisString -> STRING','lisString',1,'p_lisString','Parser.py',20),
  ('lisInt -> lisInt COMA NUMERO','lisInt',3,'p_lisInt','Parser.py',23),
  ('lisInt -> NUMERO','lisInt',1,'p_lisInt','Parser.py',24),
  ('condicion -> IGUAL IGUAL','condicion',2,'p_condicion','Parser.py',30),
  ('condicion -> EXCLAMACION IGUAL','condicion',2,'p_condicion','Parser.py',31),
  ('condicion -> MAYORQUE IGUAL','condicion',2,'p_condicion','Parser.py',32),
  ('condicion -> MENORQUE IGUAL','condicion',2,'p_condicion','Parser.py',33),
  ('condicion -> MAYORQUE','condicion',1,'p_condicion','Parser.py',34),
  ('condicion -> MENORQUE','condicion',1,'p_condicion','Parser.py',35),
  ('evaluarCondicion -> expr condicion expr','evaluarCondicion',3,'p_evaluarCondicion','Parser.py',38),
  ('evaluarCondicion -> BOOLEANO','evaluarCondicion',1,'p_evaluarCondicion','Parser.py',39),
  ('evaluarCondicion -> expr IGUAL IGUAL STRING','evaluarCondicion',4,'p_evaluarCondicion','Parser.py',40),
  ('evaluarCondicion -> expr IGUAL IGUAL BOOLEANO','evaluarCondicion',4,'p_evaluarCondicion','Parser.py',41),
  ('evaluarCondicion -> expr EXCLAMACION IGUAL BOOLEANO','evaluarCondicion',4,'p_evaluarCondicion','Parser.py',42),
  ('evaluarCondicion -> evaluarCondicion OPERADORLOGICO evaluarCondicion','evaluarCondicion',3,'p_evaluarCondicion','Parser.py',43),
  ('expr -> expr MAS term','expr',3,'p_expr','Parser.py',46),
  ('expr -> ABRIRPARENTESIS expr MAS term CERRARPARENTESIS','expr',5,'p_expr','Parser.py',47),
  ('expr -> expr MENOS term','expr',3,'p_expr','Parser.py',48),
  ('expr -> ABRIRPARENTESIS expr MENOS term CERRARPARENTESIS','expr',5,'p_expr','Parser.py',49),
  ('expr -> term','expr',1,'p_expr','Parser.py',50),
  ('term -> term POR term','term',3,'p_term','Parser.py',53),
  ('term -> term DIVIDIR term','term',3,'p_term','Parser.py',54),
  ('term -> ABRIRPARENTESIS term POR NUMERO CERRARPARENTESIS','term',5,'p_term','Parser.py',55),
  ('term -> ABRIRPARENTESIS term DIVIDIR NUMERO CERRARPARENTESIS','term',5,'p_term','Parser.py',56),
  ('term -> NUMERO','term',1,'p_term','Parser.py',57),
  ('term -> VARIABLE','term',1,'p_term','Parser.py',58),
  ('term -> FLOAT','term',1,'p_term','Parser.py',59),
  ('term -> ABRIRPARENTESIS term POR term CERRARPARENTESIS','term',5,'p_term','Parser.py',60),
  ('term -> ABRIRPARENTESIS term DIVIDIR term CERRARPARENTESIS','term',5,'p_term','Parser.py',61),
  ('parametros -> parametros COMA VARIABLE','parametros',3,'p_parametros','Parser.py',64),
  ('parametros -> VARIABLE','parametros',1,'p_parametros','Parser.py',65),
  ('parametros -> parametros COMA assignVariable','parametros',3,'p_parametros','Parser.py',66),
  ('parametros -> assignVariable','parametros',1,'p_parametros','Parser.py',67),
  ('parametros -> <empty>','parametros',0,'p_parametros','Parser.py',68),
  ('cualquierCosa -> STRING','cualquierCosa',1,'p_cualquierCosa','Parser.py',71),
  ('cualquierCosa -> NUMERO','cualquierCosa',1,'p_cualquierCosa','Parser.py',72),
  ('cualquierCosa -> VARIABLE','cualquierCosa',1,'p_cualquierCosa','Parser.py',73),
  ('filter -> FILTER ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS','filter',6,'p_filter','Parser.py',76),
  ('filter -> FILTER ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS','filter',6,'p_filter','Parser.py',77),
  ('reduce -> REDUCE ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS','reduce',6,'p_reduce','Parser.py',80),
  ('reduce -> REDUCE ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS','reduce',6,'p_reduce','Parser.py',81),
  ('map -> MAPA ABRIRPARENTESIS lambda COMA VARIABLE CERRARPARENTESIS','map',6,'p_map','Parser.py',84),
  ('map -> MAPA ABRIRPARENTESIS lambda COMA lista CERRARPARENTESIS','map',6,'p_map','Parser.py',85),
  ('lambda -> LAMBDA parametros DOSPUNTOS expr','lambda',4,'p_lambda','Parser.py',88),
  ('lambda -> LAMBDA parametros DOSPUNTOS evaluarCondicion','lambda',4,'p_lambda','Parser.py',89),
  ('lambda -> LAMBDA parametros DOSPUNTOS INT IF evaluarCondicion ELSE cualquierCosa','lambda',8,'p_lambda','Parser.py',90),
  ('lambda -> LAMBDA parametros DOSPUNTOS STR IF evaluarCondicion ELSE cualquierCosa','lambda',8,'p_lambda','Parser.py',91),
]
